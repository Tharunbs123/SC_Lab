import numpy as np
X = np.array([
 [1, 0, 0], # bias, x1, x2
 [1, 0, 1],
 [1, 1, 0],
 [1, 1, 1]
])
Y = np.array([0, 1, 1, 1])
weights = np.zeros(X.shape[1])
learning_rate = 0.1
for i in range(len(X)):
 weights += learning_rate * X[i] * Y[i] # Hebb's rule update
print("Final Weights:", weights)
def predict(x):
 return 1 if np.dot(weights, x) >= 0.5 else 0
print("\nPredictions:")
for x in X:
 print(f"Input: {x[1:]}, Prediction: {predict(x)}")
